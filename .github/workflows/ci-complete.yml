name: CI - Complete Quality Check

on:
  pull_request:
    branches: [ "main" ]

env:
  # Establece el perfil SSL para los tests que se ejecutan con @SpringBootTest
  SPRING_PROFILES_ACTIVE: ssl

jobs:
  backend-complete:
    runs-on: ubuntu-latest
    name: Backend Complete Quality Check
    # --- CORRECCIÓN 1: Añadir la contraseña para los tests de integración ---
    env:
      KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
    # --------------------------------------------------------------------
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Build backend
        working-directory: backend
        run: mvn clean compile -B

      - name: Run backend unit tests
        working-directory: backend
        run: mvn test -Dtest="*Unit*,*ServiceTest*" -Dsurefire.failIfNoSpecifiedTests=false -B

      - name: Run backend integration tests
        working-directory: backend
        run: mvn test -Dtest="*System*,*ApiTest*" -Dsurefire.failIfNoSpecifiedTests=false -B


  selenium-tests: 
    runs-on: ubuntu-latest
    name: Selenium E2E Tests 
    needs: [backend-complete]

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Install Chrome for Selenium
        run: |
          sudo apt-get update
          sudo apt-get install -y google-chrome-stable

      - name: Create Keystore from Secret
        env:
          KEYSTORE_P12_BASE64: ${{ secrets.KEYSTORE_P12_BASE64 }}
        run: |
          echo "Creating keystore file from secret..."
          echo "${KEYSTORE_P12_BASE64}" | base64 --decode > backend/src/main/resources/keystore.p12
          echo "Keystore file created successfully."

      - name: Start Backend and Wait for Health
        working-directory: backend
        env:
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
        run: |
          nohup mvn spring-boot:run -Dspring-boot.run.profiles=ssl > backend.log 2>&1 &
          echo "Waiting for backend to become healthy..."
          # --- CORRECCIÓN 2: Usar el puerto 8443 para evitar error de permisos ---
          timeout 90 bash -c 'until curl --fail --insecure https://localhost:8443/api/v1/transactions; do sleep 5; done'
          echo "Backend is up and running on HTTPS."

      - name: Build and Start Frontend and Wait for Health
        working-directory: frontend
        run: |
          npm ci
          nohup npx ng serve --host 0.0.0.0 --port 4200 --disable-host-check > frontend.log 2>&1 &
          echo "Waiting for frontend to start..."
          timeout 60 bash -c 'until curl --fail http://localhost:4200; do sleep 5; done'
          echo "Frontend is up and running."

      - name: Run Selenium Tests
        working-directory: backend
        run: mvn test -Dtest="HomePageTest" -B

      - name: Show logs on failure
        if: failure()
        run: |
          echo "--- Backend logs (last 100 lines) ---"
          tail -n 100 backend/backend.log
          echo "--- Frontend logs (last 100 lines) ---"
          tail -n 100 frontend/frontend.log


  quality-gate:
    runs-on: ubuntu-latest  
    name: Quality Gate
    needs: [backend-complete, selenium-tests]
    
    steps:
      - name: Quality Gate Passed
        run: echo "All quality checks passed. Ready to merge!"